@use "functions";
@use "mixins/border-radius";
@use "mixins/box-shadow";
@use "mixins/gradients";
@use "mixins/transition";
@use "variables";
@use "vendor/rfs";

// Embedded icons from Open Iconic.
// Released under MIT and copyright 2014 Waybury.
// https://useiconic.com/open


// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.

.custom-control {
  position: relative;
  display: block;
  min-height: variables.$font-size-base * variables.$line-height-base;
  padding-left: variables.$custom-control-gutter + variables.$custom-control-indicator-size;
}

.custom-control-inline {
  display: inline-flex;
  margin-right: variables.$custom-control-spacer-x;
}

.custom-control-input {
  position: absolute;
  left: 0;
  z-index: -1; // Put the input behind the label so it doesn't overlay text
  width: variables.$custom-control-indicator-size;
  height: (variables.$font-size-base * variables.$line-height-base + variables.$custom-control-indicator-size) / 2;
  opacity: 0;

  &:checked ~ .custom-control-label::before {
    color: variables.$custom-control-indicator-checked-color;
    border-color: variables.$custom-control-indicator-checked-border-color;
    @include gradients.gradient-bg(variables.$custom-control-indicator-checked-bg);
    @include box-shadow.box-shadow(variables.$custom-control-indicator-checked-box-shadow);
  }

  &:focus ~ .custom-control-label::before {
    // the mixin is not used here to make sure there is feedback
    @if variables.$enable-shadows {
      box-shadow: variables.$input-box-shadow, variables.$input-focus-box-shadow;
    } @else {
      box-shadow: variables.$custom-control-indicator-focus-box-shadow;
    }
  }

  &:focus:not(:checked) ~ .custom-control-label::before {
    border-color: variables.$custom-control-indicator-focus-border-color;
  }

  &:not(:disabled):active ~ .custom-control-label::before {
    color: variables.$custom-control-indicator-active-color;
    background-color: variables.$custom-control-indicator-active-bg;
    border-color: variables.$custom-control-indicator-active-border-color;
    @include box-shadow.box-shadow(variables.$custom-control-indicator-active-box-shadow);
  }

  // Use [disabled] and :disabled to work around https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .custom-control-label {
      color: variables.$custom-control-label-disabled-color;

      &::before {
        background-color: variables.$custom-control-indicator-disabled-bg;
      }
    }
  }
}

// Custom control indicators
//
// Build the custom controls out of pseudo-elements.

.custom-control-label {
  position: relative;
  margin-bottom: 0;
  color: variables.$custom-control-label-color;
  vertical-align: top;
  cursor: variables.$custom-control-cursor;

  // Background-color and (when enabled) gradient
  &::before {
    position: absolute;
    top: (variables.$font-size-base * variables.$line-height-base - variables.$custom-control-indicator-size) / 2;
    left: -(variables.$custom-control-gutter + variables.$custom-control-indicator-size);
    display: block;
    width: variables.$custom-control-indicator-size;
    height: variables.$custom-control-indicator-size;
    pointer-events: none;
    content: "";
    background-color: variables.$custom-control-indicator-bg;
    border: variables.$custom-control-indicator-border-color solid variables.$custom-control-indicator-border-width;
    @include box-shadow.box-shadow(variables.$custom-control-indicator-box-shadow);
  }

  // Foreground (icon)
  &::after {
    position: absolute;
    top: (variables.$font-size-base * variables.$line-height-base - variables.$custom-control-indicator-size) / 2;
    left: -(variables.$custom-control-gutter + variables.$custom-control-indicator-size);
    display: block;
    width: variables.$custom-control-indicator-size;
    height: variables.$custom-control-indicator-size;
    content: "";
    background: no-repeat 50% / #{variables.$custom-control-indicator-bg-size};
  }
}


// Checkboxes
//
// Tweak just a few things for checkboxes.

.custom-checkbox {
  .custom-control-label::before {
    @include border-radius.border-radius(variables.$custom-checkbox-indicator-border-radius);
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-image: functions.escape-svg(variables.$custom-checkbox-indicator-icon-checked);
    }
  }

  .custom-control-input:indeterminate ~ .custom-control-label {
    &::before {
      border-color: variables.$custom-checkbox-indicator-indeterminate-border-color;
      @include gradients.gradient-bg(variables.$custom-checkbox-indicator-indeterminate-bg);
      @include box-shadow.box-shadow(variables.$custom-checkbox-indicator-indeterminate-box-shadow);
    }
    &::after {
      background-image: functions.escape-svg(variables.$custom-checkbox-indicator-icon-indeterminate);
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: variables.$custom-control-indicator-checked-disabled-bg;
    }
    &:indeterminate ~ .custom-control-label::before {
      background-color: variables.$custom-control-indicator-checked-disabled-bg;
    }
  }
}

// Radios
//
// Tweak just a few things for radios.

.custom-radio {
  .custom-control-label::before {
    // stylelint-disable-next-line property-blacklist
    border-radius: variables.$custom-radio-indicator-border-radius;
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-image: functions.escape-svg(variables.$custom-radio-indicator-icon-checked);
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: variables.$custom-control-indicator-checked-disabled-bg;
    }
  }
}


// switches
//
// Tweak a few things for switches

.custom-switch {
  padding-left: variables.$custom-switch-width + variables.$custom-control-gutter;

  .custom-control-label {
    &::before {
      left: -(variables.$custom-switch-width + variables.$custom-control-gutter);
      width: variables.$custom-switch-width;
      pointer-events: all;
      // stylelint-disable-next-line property-blacklist
      border-radius: variables.$custom-switch-indicator-border-radius;
    }

    &::after {
      top: functions.add((variables.$font-size-base * variables.$line-height-base - variables.$custom-control-indicator-size) / 2, variables.$custom-control-indicator-border-width * 2);
      left: functions.add(-(variables.$custom-switch-width + variables.$custom-control-gutter), variables.$custom-control-indicator-border-width * 2);
      width: variables.$custom-switch-indicator-size;
      height: variables.$custom-switch-indicator-size;
      background-color: variables.$custom-control-indicator-border-color;
      // stylelint-disable-next-line property-blacklist
      border-radius: variables.$custom-switch-indicator-border-radius;
      @include transition.transition(transform .15s ease-in-out, variables.$custom-forms-transition);
    }
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-color: variables.$custom-control-indicator-bg;
      transform: translateX(variables.$custom-switch-width - variables.$custom-control-indicator-size);
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: variables.$custom-control-indicator-checked-disabled-bg;
    }
  }
}


// Select
//
// Replaces the browser default select with a custom one, mostly pulled from
// https://primer.github.io/.
//

.custom-select {
  display: inline-block;
  width: 100%;
  height: variables.$custom-select-height;
  padding: variables.$custom-select-padding-y (variables.$custom-select-padding-x + variables.$custom-select-indicator-padding) variables.$custom-select-padding-y variables.$custom-select-padding-x;
  font-family: variables.$custom-select-font-family;
  @include rfs.font-size(variables.$custom-select-font-size);
  font-weight: variables.$custom-select-font-weight;
  line-height: variables.$custom-select-line-height;
  color: variables.$custom-select-color;
  vertical-align: middle;
  background: variables.$custom-select-bg variables.$custom-select-background;
  border: variables.$custom-select-border-width solid variables.$custom-select-border-color;
  @include border-radius.border-radius(variables.$custom-select-border-radius, 0);
  @include box-shadow.box-shadow(variables.$custom-select-box-shadow);
  appearance: none;

  &:focus {
    border-color: variables.$custom-select-focus-border-color;
    outline: 0;
    @if variables.$enable-shadows {
      @include box-shadow.box-shadow(variables.$custom-select-box-shadow, variables.$custom-select-focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: variables.$custom-select-focus-box-shadow;
    }

    &::-ms-value {
      // For visual consistency with other platforms/browsers,
      // suppress the default white text on blue background highlight given to
      // the selected option text when the (still closed) <select> receives focus
      // in IE and (under certain conditions) Edge.
      // See https://github.com/twbs/bootstrap/issues/19398.
      color: variables.$input-color;
      background-color: variables.$input-bg;
    }
  }

  &[multiple],
  &[size]:not([size="1"]) {
    height: auto;
    padding-right: variables.$custom-select-padding-x;
    background-image: none;
  }

  &:disabled {
    color: variables.$custom-select-disabled-color;
    background-color: variables.$custom-select-disabled-bg;
  }

  // Hides the default caret in IE11
  &::-ms-expand {
    display: none;
  }

  // Remove outline from select box in FF
  &:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 variables.$custom-select-color;
  }
}

.custom-select-sm {
  height: variables.$custom-select-height-sm;
  padding-top: variables.$custom-select-padding-y-sm;
  padding-bottom: variables.$custom-select-padding-y-sm;
  padding-left: variables.$custom-select-padding-x-sm;
  @include rfs.font-size(variables.$custom-select-font-size-sm);
}

.custom-select-lg {
  height: variables.$custom-select-height-lg;
  padding-top: variables.$custom-select-padding-y-lg;
  padding-bottom: variables.$custom-select-padding-y-lg;
  padding-left: variables.$custom-select-padding-x-lg;
  @include rfs.font-size(variables.$custom-select-font-size-lg);
}


// File
//
// Custom file input.

.custom-file {
  position: relative;
  display: inline-block;
  width: 100%;
  height: variables.$custom-file-height;
  margin-bottom: 0;
}

.custom-file-input {
  position: relative;
  z-index: 2;
  width: 100%;
  height: variables.$custom-file-height;
  margin: 0;
  opacity: 0;

  &:focus ~ .custom-file-label {
    border-color: variables.$custom-file-focus-border-color;
    box-shadow: variables.$custom-file-focus-box-shadow;
  }

  // Use [disabled] and :disabled to work around https://github.com/twbs/bootstrap/issues/28247
  &[disabled] ~ .custom-file-label,
  &:disabled ~ .custom-file-label {
    background-color: variables.$custom-file-disabled-bg;
  }

  @each $lang, $value in variables.$custom-file-text {
    &:lang(#{$lang}) ~ .custom-file-label::after {
      content: $value;
    }
  }

  ~ .custom-file-label[data-browse]::after {
    content: attr(data-browse);
  }
}

.custom-file-label {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1;
  height: variables.$custom-file-height;
  padding: variables.$custom-file-padding-y variables.$custom-file-padding-x;
  font-family: variables.$custom-file-font-family;
  font-weight: variables.$custom-file-font-weight;
  line-height: variables.$custom-file-line-height;
  color: variables.$custom-file-color;
  background-color: variables.$custom-file-bg;
  border: variables.$custom-file-border-width solid variables.$custom-file-border-color;
  @include border-radius.border-radius(variables.$custom-file-border-radius);
  @include box-shadow.box-shadow(variables.$custom-file-box-shadow);

  &::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    z-index: 3;
    display: block;
    height: variables.$custom-file-height-inner;
    padding: variables.$custom-file-padding-y variables.$custom-file-padding-x;
    line-height: variables.$custom-file-line-height;
    color: variables.$custom-file-button-color;
    content: "Browse";
    @include gradients.gradient-bg(variables.$custom-file-button-bg);
    border-left: inherit;
    @include border-radius.border-radius(0 variables.$custom-file-border-radius variables.$custom-file-border-radius 0);
  }
}

// Range
//
// Style range inputs the same across browsers. Vendor-specific rules for pseudo
// elements cannot be mixed. As such, there are no shared styles for focus or
// active states on prefixed selectors.

.custom-range {
  width: 100%;
  height: functions.add(variables.$custom-range-thumb-height, variables.$custom-range-thumb-focus-box-shadow-width * 2);
  padding: 0; // Need to reset padding
  background-color: transparent;
  appearance: none;

  &:focus {
    outline: none;

    // Pseudo-elements must be split across multiple rulesets to have an effect.
    // No box-shadow() mixin for focus accessibility.
    &::-webkit-slider-thumb { box-shadow: variables.$custom-range-thumb-focus-box-shadow; }
    &::-moz-range-thumb     { box-shadow: variables.$custom-range-thumb-focus-box-shadow; }
    &::-ms-thumb            { box-shadow: variables.$custom-range-thumb-focus-box-shadow; }
  }

  &::-moz-focus-outer {
    border: 0;
  }

  &::-webkit-slider-thumb {
    width: variables.$custom-range-thumb-width;
    height: variables.$custom-range-thumb-height;
    margin-top: (variables.$custom-range-track-height - variables.$custom-range-thumb-height) / 2; // Webkit specific
    @include gradients.gradient-bg(variables.$custom-range-thumb-bg);
    border: variables.$custom-range-thumb-border;
    @include border-radius.border-radius(variables.$custom-range-thumb-border-radius);
    @include box-shadow.box-shadow(variables.$custom-range-thumb-box-shadow);
    @include transition.transition(variables.$custom-forms-transition);
    appearance: none;

    &:active {
      @include gradients.gradient-bg(variables.$custom-range-thumb-active-bg);
    }
  }

  &::-webkit-slider-runnable-track {
    width: variables.$custom-range-track-width;
    height: variables.$custom-range-track-height;
    color: transparent; // Why?
    cursor: variables.$custom-range-track-cursor;
    background-color: variables.$custom-range-track-bg;
    border-color: transparent;
    @include border-radius.border-radius(variables.$custom-range-track-border-radius);
    @include box-shadow.box-shadow(variables.$custom-range-track-box-shadow);
  }

  &::-moz-range-thumb {
    width: variables.$custom-range-thumb-width;
    height: variables.$custom-range-thumb-height;
    @include gradients.gradient-bg(variables.$custom-range-thumb-bg);
    border: variables.$custom-range-thumb-border;
    @include border-radius.border-radius(variables.$custom-range-thumb-border-radius);
    @include box-shadow.box-shadow(variables.$custom-range-thumb-box-shadow);
    @include transition.transition(variables.$custom-forms-transition);
    appearance: none;

    &:active {
      @include gradients.gradient-bg(variables.$custom-range-thumb-active-bg);
    }
  }

  &::-moz-range-track {
    width: variables.$custom-range-track-width;
    height: variables.$custom-range-track-height;
    color: transparent;
    cursor: variables.$custom-range-track-cursor;
    background-color: variables.$custom-range-track-bg;
    border-color: transparent; // Firefox specific?
    @include border-radius.border-radius(variables.$custom-range-track-border-radius);
    @include box-shadow.box-shadow(variables.$custom-range-track-box-shadow);
  }

  &::-ms-thumb {
    width: variables.$custom-range-thumb-width;
    height: variables.$custom-range-thumb-height;
    margin-top: 0; // Edge specific
    margin-right: variables.$custom-range-thumb-focus-box-shadow-width; // Workaround that overflowed box-shadow is hidden.
    margin-left: variables.$custom-range-thumb-focus-box-shadow-width;  // Workaround that overflowed box-shadow is hidden.
    @include gradients.gradient-bg(variables.$custom-range-thumb-bg);
    border: variables.$custom-range-thumb-border;
    @include border-radius.border-radius(variables.$custom-range-thumb-border-radius);
    @include box-shadow.box-shadow(variables.$custom-range-thumb-box-shadow);
    @include transition.transition(variables.$custom-forms-transition);
    appearance: none;

    &:active {
      @include gradients.gradient-bg(variables.$custom-range-thumb-active-bg);
    }
  }

  &::-ms-track {
    width: variables.$custom-range-track-width;
    height: variables.$custom-range-track-height;
    color: transparent;
    cursor: variables.$custom-range-track-cursor;
    background-color: transparent;
    border-color: transparent;
    border-width: variables.$custom-range-thumb-height / 2;
    @include box-shadow.box-shadow(variables.$custom-range-track-box-shadow);
  }

  &::-ms-fill-lower {
    background-color: variables.$custom-range-track-bg;
    @include border-radius.border-radius(variables.$custom-range-track-border-radius);
  }

  &::-ms-fill-upper {
    margin-right: 15px; // arbitrary?
    background-color: variables.$custom-range-track-bg;
    @include border-radius.border-radius(variables.$custom-range-track-border-radius);
  }

  &:disabled {
    &::-webkit-slider-thumb {
      background-color: variables.$custom-range-thumb-disabled-bg;
    }

    &::-webkit-slider-runnable-track {
      cursor: default;
    }

    &::-moz-range-thumb {
      background-color: variables.$custom-range-thumb-disabled-bg;
    }

    &::-moz-range-track {
      cursor: default;
    }

    &::-ms-thumb {
      background-color: variables.$custom-range-thumb-disabled-bg;
    }
  }
}

.custom-control-label::before,
.custom-file-label,
.custom-select {
  @include transition.transition(variables.$custom-forms-transition);
}
