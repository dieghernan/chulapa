{"version":3,"sourceRoot":"","sources":["stackoverflow.dark.scss"],"names":[],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA,GAsDA,wCAEE,4CACA,4CACA,8DAGA,6CAGA,4CAGA,4CAwGD,gCACA,8BACA,0BAlJa,QAkJ2B,MAnJ3B,KA2JZ,oBAvJQ,KAwJR,qBAxJQ,KAyJR,sBAzJQ,KA4JR,qBA5JQ,KA+JR,qBA/JQ,KAgKR,qBAhKQ,KAmKR,qBAnKQ,KAyKR,qBAxK0B,QA2K1B,qBA1KkB,QA6KlB,qBA3Ke,QA4Kf,qBA5Ke,QAkLf,oBAnLiB,QAoLjB,qBApLiB,QAqLjB,qBArLiB,QAsLjB,qBAtLiB,QAuLjB,qBAvLiB,QAwLjB,qBAxLiB,QAyLjB,qBAzLiB,QA+LjB,qBA7LY,QA8LZ,qBA9LY,QA+LZ,qBA/LY,QAgMZ,qBAhMY,QAiMZ,qBAjMY,QAmMZ,qBAlMgB,QAmMhB,qBAlMiB,QAqMjB,qBAhNY,KAsNZ,sBAzMQ,QA0MR,qBA1MQ,QA2MR,qBA3MQ,QA4MR,qBA5MQ,QAkNR,oBAjNgB,QAkNhB,qBAlNgB,QAqNhB,oBAnOY,KAoOZ,qBApOY,KA2OZ,qBA3OY,KA2Oc,iBAC1B,qBA1Ne,QA2Nf,qBA3Ne,QA4Nf,qBA9OY,KA8OgB,kBAC5B,mDAMA,oBArPY,KAsPZ,qBAtPY,KAuPZ,qBAvPY,KAwPZ,qBAxPY,KA8PZ,qBA1Oa,QA2Ob,qBA3Oa,QAiPb,oBAhQ0B,QAmQ1B,qBAnQ0B,QAoQ1B,qBApQ0B,QAqQ1B,qBArQ0B,QAsQ1B,qBAtQ0B,QAyQ1B,qBAzQ0B,QA4Q1B,qBA3Pc,QAiQd,qBAhQQ,QAiQR,qBAjQQ,QAoQR,qBApQQ,QAqQR,qBArQQ,QAuQR,qBAtQa,QA2Qb,qBA1QS,QA4QT,qBA5QS,QA+QT,qBA/QS,QAgRT,qBAhRS,QAiRT,qBAjRS","sourcesContent":["/*!\n  Theme: StackOverflow Dark\n  Description: Dark theme as used on stackoverflow.com\n  Author: stackoverflow.com\n  Maintainer: @Hirse\n  Website: https://github.com/StackExchange/Stacks\n  License: MIT\n  Updated: 2021-05-15\n\n  Updated for @stackoverflow/stacks v0.64.0\n  Code Blocks: /blob/v0.64.0/lib/css/components/_stacks-code-blocks.less\n  Colors: /blob/v0.64.0/lib/css/exports/_stacks-constants-colors.less\n \n \n Adapted by Diego H <https://github.com/dieghernan/> for pygments\n based in https://github.com/highlightjs/highlight.js/blob/main/src/styles/stackoverflow-light.css\n \n BSD 3-Clause License\n\nCopyright (c) 2006, Ivan Sagalaev.\nAll rights reserved.\n \n */\n \n\n// Top level colors\n$foreground:  #ffffff; // Base color: usually on Settings > Foreground\n$background:  #1c1b1b; // Background color: usually on Settings > Background\n\n\n$comment: #999999; // hljs: comment\n$constant_character_escape: #b5bd68; // hljs: string\n$constant_language: #f08d49; // hljs: literal\n$constant_numeric: #f08d49; // hljs: number\n$constant_other: #f08d49; // hljs: title\n$entity_name: #f08d49; // hljs: title\n$entity_name_tag: #88aece; // hljs: selector-tag\n$entity_name_type: #f08d49; // hljs: selector-id\n$entity_other_attribute-name: $foreground ; // No mapping\n$invalid: #de7176; // No mapping -> deletion\n$keyword_control: #88aece; // hljs: keyword\n$keyword_operator: $foreground;  // hljs: operator\n$markup_bold: $foreground; // hljs: strong\n$markup_italic: $foreground; //hljs: emphasis\n$markup_heading: #88aece; // hljs: section\n$punctuation_definition: $foreground; // hljs: punctuation\n$storage_type: #88aece; // hljs: keyword\n$string: $constant_character_escape; // hljs: string\n$string_regexp: #b5bd68; // hljs: regexp\n$support: #88aece; // hljs: keyword\n$support_type: #c59bc1; // hljs: attribute\n$variable: #b5bd68; // hljs: variable\n\n/* Special mapping rouge - hljs */\n.highlight .nc {color: #88aece !important;} // hljs selector-class to Name.Class\n.language-html .highlight {\n  .na {color: #88aece;} // hljs attr: CSS specific\n  .nt {color: #f08d49;} // hljs name: CSS specific\n  .cp {color: #88aece; font-style: normal;} // hljs meta: CSS specific\n}\n.language-markdown .highlight {\n  .sb {color: #cccccc;} // hljs code: CSS specific\n}\n.language-yaml .highlight {\n  .na {color: #88aece;} // hljs attr: CSS specific\n}\n.language-json .highlight {\n  .nl {color: #88aece;} // hljs attr: CSS specific\n}\n\n\n// tmTheme scopes as SASS variables\n// Naming convention: scope_without_dots\n// See more in: https://macromates.com/manual/en/language_grammars\n\n// Comments\n$comment:                  $foreground !default; //Any comments\n$comment_block:            $comment !default; //Multi-line comments /* … */,<- … -->.\n$comment_line:             $comment !default; //Line comments\n$comment_line_number-sign: $comment_line !default; // # comment\n\n// Constants\n$constant_character_escape: $foreground !default; //Escape sequences.\n$constant_language:         $foreground !default; //Special constants like true, false,nil\n\n// Constant: Numbers\n$constant_numeric:          $foreground !default; //Any number\n$constant_numeric_float:    $constant_numeric !default; // Floating number\n$constant_numeric_integer:  $constant_numeric !default; //Integers\n\n// Other constants\n$constant_other:        $foreground !default; //Any other constants, e.g. colors in CSS.\n$constant_other_symbol: $constant_other !default; //\n\n// Entities: Part of the document, for example a chapter, class, function, or tag.\n$entity_name:                 $foreground !default; //Larger entity\n$entity_name_tag:             $entity_name !default; //Tag name.\n$entity_name_type:            $entity_name !default; //Type declaration or class.\n$entity_other_attribute-name: $foreground !default; //Name of an attribute (mainly in tags).\n\n// Invalid: Stuff that is invalid, illegal or deprecated\n// Mapped to errors in Pygments\n$invalid: $foreground !default;\n\n// Keywords\n$keyword_control:         $foreground !default; //Related to flow control: continue, while, return, etc.\n$keyword_control_import:  $keyword_control !default;\n$keyword_operator:        $foreground !default; //Operators can be textual (e.g. or) or be characters.\n\n// Markup: For markup languages and generally applies to larger subsets of the text\n$markup_bold:             $foreground !default; //Bold text.\n$markup_heading:          $foreground !default; //Section header.\n$markup_italic:           $foreground !default; //Italic text\n\n\n// Punctuation\n// Specific of SublimeText, see:\n// https://www.sublimetext.com/docs/scope_naming.html#alphabetical-reference\n$punctuation_definition: $foreground !default;\n\n// Storage: These are keywords in Pygments\n$storage_type: $foreground !default; //Type of something, class, function, int, var, etc.\n\n\n// Strings\n$string:                $foreground !default; //Strings\n$string_interpolated:   $string !default; //Strings which are \"evaluated\": `date`, $(pwd).\n$string_quoted:         $string !default; //Quoted strings\n$string_quoted_single:  $string_quoted !default; //Single quoted strings: 'foo'.\n$string_quoted_double:  $string_quoted !default; //Double quoted strings: \"foo\".\n$string_quoted_other:   $string_quoted !default; //Other types of quoting: $'shell', %s{...}.\n$string_regexp:         $string !default; //Regular expressions: /(\\w+)/.\n\n// Support: Built-in things\n$support:           $foreground !default; //Things provided by a framework or library.\n$support_constant:  $support !default; //Constants (magic values) provided by the framework/library.\n$support_type:      $support !default; //Types provided by the framework/library,\n\n\n// Variable\n$variable:           $foreground !default; //Not all languages allow easy identification (and thus markup) of these.\n$variable_language:  $variable !default; //Reserved language variables like this,super,self, etc.\n$variable_other:     $variable !default; //Other variables\n\n// Not mapped Pygment classes, we don't provide special styles here\n// but can be easily added as:\n// .highlight .esc {color: myColor;}\n// Pygment css class -> Description\n// .esc -> Escape\n// .g   -> Generic (A generic, unstyled token. Normally not used)\n// .gd  -> Generic.Deleted (Marks the token value as deleted)\n// .gi  -> Generic.Inserted (Marks the token value as inserted)\n// .go  -> Generic.Output (Marks the token value as program output)\n// .gp  -> Generic.Prompt (Marks the token value as command prompt)\n// .hll -> High-lighted Line\n// .kr  -> Keyword.Reserved (For reserved keywords)\n// .l   -> Literal (For any literal if not further defined)\n// .ld  -> Literal.Date (for date literals)\n// .n   -> Name (For any name (variable names, function names, classes))\n// .nx  -> Name.Other (Other names. Normally unused.)\n// .x   -> Other (special token for data not matched by a parser (e.g. HTML markup in PHP code))\n// .sa  -> String.Affix (Token type for affixes)\n// .sc  -> String.Char (Token type for single characters (e.g. Java, C).)\n// .sd  -> String.Doc (Token type for documentation strings)\n// .w   -> Whitespace (for whitespace)\n\n\n\n// Styles\n\n/* Overall */\n .highlight table td {padding: 5px;}\n .highlight table pre {margin: 0;}\n .highlight pre {background:$background; color:$foreground;}\n\n\n\n// Classes\n/* Comments */\n.highlight {\n  // Scope: comments\n  .c   {color:$comment;} //Comment\n  .cp  {color:$comment;} //Comment.Preproc\n  .cpf {color:$comment;} //Comment.PreprocFile\n\n  // Scope: comments.block\n  .cm  {color:$comment_block;} //Comment.Multiline\n\n  // Scope: comments.line\n  .c1  {color:$comment_line;} //Comment.Single\n  .cs  {color:$comment_line;} //Comment.Special\n\n  // Scope: comments.line.number-sign\n  .ch  {color:$comment_line_number-sign;} //Comment.Hashbang\n}\n\n/* Constants */\n.highlight {\n  // Scope: constant.character.escape\n  .se  {color:$constant_character_escape;} //String.Escape\n\n  // Scope: constant.language\n  .kc  {color:$constant_language;} //Keyword.Constant\n\n  // Scope: constant.other\n  .no  {color:$constant_other;} //Name.Constant\n  .ss  {color:$constant_other_symbol;} //String.Symbol\n}\n\n/* Numbers */\n.highlight {\n  // Scope: constant.numeric and children\n  .m   {color:$constant_numeric;} //Number\n  .mb  {color:$constant_numeric;} //Number.Bin\n  .mh  {color:$constant_numeric;} //Number.Hex\n  .mo  {color:$constant_numeric;} //Number.Oct\n  .mf  {color:$constant_numeric_float;} //Number.Float\n  .mi  {color:$constant_numeric_integer;} //Number.Integer\n  .il  {color:$constant_numeric_integer;} //Number.Integer.Long\n}\n\n/* Entities */\n.highlight {\n  // Scope: entity.name\n  .nc {color:$entity_name;} //Name.Class\n  .nd {color:$entity_name;} //Name.Decorator\n  .ne {color:$entity_name;} //Name.Entity\n  .nf {color:$entity_name;} //Name.Function\n  .py {color:$entity_name;} //Name.Property\n\n  .nt {color:$entity_name_tag;} //Name.Tag\n  .nn {color:$entity_name_type;} //Name.Namespace\n\n  // Scope: entity.other\n  .na {color:$entity_other_attribute-name;} //Name.Attribute\n}\n\n/* Invalid */\n.highlight {\n  // Scope: Invalid\n  .err {color:$invalid;} //Error\n  .gr  {color:$invalid;} //Generic.Error\n  .gt  {color:$invalid;} //Generic.Traceback\n  .ne  {color:$invalid;} //Name.Exception\n}\n\n/* Keywords */\n.highlight {\n  // Scope: keyword.control\n  .k  {color:$keyword_control;} //Keyword\n  .kn {color:$keyword_control_import;} //Keyword.Namespace\n\n  // Scope: keyword.operator\n  .o  {color:$keyword_operator;} //Operator\n  .ow {color:$keyword_operator;} //Operator.Word\n}\n\n/* Markup */\n// We add italics, etc. on css\n.highlight {\n  // Scope: Subclasses of markup\n  .gs  {color:$markup_bold; font-weight:bold;} //Generic.Strong\n  .gh  {color:$markup_heading;} //Generic.Heading\n  .gu  {color:$markup_heading;} //Generic.Subheading\n  .ge  {color:$markup_italic; font-style:italic;} //Generic.Emph\n  .ges {font-weight:bold; font-style:italic;} //Generic.EmphStrong\n}\n\n/* Punctuation */\n.highlight {\n  // Scope: punctuation.definition\n  .p  {color:$punctuation_definition;} //Punctuation\n  .pm {color:$punctuation_definition;} //Punctuation.Marker\n  .dl {color:$punctuation_definition;} //String.Delimiter\n  .sh {color:$punctuation_definition;} //String.Heredoc\n}\n\n/* Storage */\n.highlight {\n  // Scope: storage.type\n  .kd {color:$storage_type;} //Keyword.Declaration\n  .kt {color:$storage_type;} //Keyword.Type\n}\n\n/* String */\n.highlight {\n  // Scope: string\n  .s  {color:$string;} //String\n\n  // Scope: string.quoted\n  .sb {color:$string_quoted;} //String.Backtick\n  .s1 {color:$string_quoted_single;} //String.Single\n  .s2 {color:$string_quoted_double;} //String.Double\n  .sx {color:$string_quoted_other;} //String.Other\n\n  // Scope: string.interpolated\n  .si {color:$string_interpolated;} //String.Interpol\n\n  // Scope: string.regexp\n  .sr {color:$string_regexp;} //String.Regex\n}\n\n/* Support */\n.highlight {\n  // Scope: support\n  .nb {color:$support;} //Name.Builtin\n  .bp {color:$support;} //Name.Builtin.Pseudo\n\n  // Scope: support.constant\n  .fm {color:$support_constant;} //Name.Function.Magic\n  .vm {color:$support_constant;} //Name.Variable.Magic\n\n  .nl {color: $support_type}; //Name.Label\n}\n\n/* Variable */\n.highlight {\n  .vi {color:$variable;} //Name.Variable.Instance\n\n  .kp {color:$variable_language;} //Keyword.Pseudo\n\n  // Scope: variable.other\n  .nv {color:$variable_other;} // Name.Variable\n  .vc {color:$variable_other;} // Name.Variable.Class\n  .vg {color:$variable_other;} // Name.Variable.Global\n}\n"],"file":"stackoverflow.dark.css"}