{"version":3,"sourceRoot":"","sources":["skeletor.scss"],"names":[],"mappings":"AAsHC,oBACE,YAEF,qBACE,SAIF,KACE,MAlHS,QAqHX,eACE,WAvHO,QAwHP,MAzHS,QA6HX,cACE,MAxHM,QA0HR,eACE,MA3HM,QA6HR,eACE,MA5HO,QA6HP,iBAEF,eACE,MAlIM,QAoIR,eACE,MArIM,QAuIR,eACE,MAxIM,QA0IR,gBACE,MAzIO,QA4IT,gBACE,MAvIQ,QA2IV,cACE,MA1JS,QA4JX,eACE,MA7JS,QA+JX,eACE,MAhKS,QAkKX,eACE,MArJQ,QAuJV,eACE,MAjJO,QAmJT,eACE,MAnJO,QAqJT,eACE,MA5KS,QA8KX,eACE,MA/KS,QAiLX,eACE,MAlLS,QAoLX,eACE,MArLS,QAuLX,eACE,MAnKO,QAqKT,eACE,MA7KQ,QA+KV,gBACE,iBACA,kBAIF,cACE,MArKM,QAuKR,eACE,MAvKO,QAyKT,eACE,MA3KM,QA6KR,eACE,MA9KM,QAgLR,eACE,MAjLM,QAmLR,eACE,MApLM,QAsLR,eACE,MAvLM,QA2LR,cACE,MA3NS,QA6NX,eACE,MArLO,QAuLT,cACE,MArLM,QAuLR,eACE,MAxLM,QA0LR,eACE,MA3LM,QA6LR,eACE,MA9LM,QAgMR,eACE,MAjMM,QAmMR,eACE,MApMM,QAsMR,eACE,MAvMM,QAyMR,eACE,MA1MM,QA4MR,cACE,MAnMM,QAqMR,eACE,MAtMM,QAwMR,eACE,MAzMM,QA2MR,eACE,MA5MM,QA8MR,eACE,MA/MM,QAiNR,eACE,MAlNM,QAoNR,eACE,MA5MO,QA8MT,eACE,MAxNM,QA0NR,eACE,MA3NM,QA6NR,eACE,MA9NM,QAgOR,eACE,MAxNO,QA0NT,eACE,MApOM,QAsOR,eACE,MAvOM,QAyOR,eACE,MA1OM,QA8OR,cACE,MArSS,QAuSX,eACE,MAjOO,QAmOT,eACE,MAnOO,QAqOT,eACE,MAtOO,QAwOT,eACE,MAjTS,QAmTX,eACE,MAzOO,QA2OT,eACE,MAvTS,QAyTX,eACE,MA7OO,QA+OT,eACE,MA/SQ,QAiTV,eACE,MAjPO,QAmPT,eACE,MAnPO,QAqPT,eACE,MAvPO,QAyPT,eACE,MAvPO,QAyPT,eACE,MA5US,QA8UX,eACE,MA3PO,QA6PT,eACE,MA7PO,QA+PT,eACE,MAtQO,QAwQT,eACE,MAzQO,QA2QT,eACE,MA5QO,QA8QT,eACE,MA/QO,QAiRT,eACE,MAlRO,QAsRT,cACE,MAzQM,QA2QR,eACE,MA5QM,QAgRR,cACE,MA9WS,QAgXX,cACE,MA/QM,QAiRR,eACE,MAlRM,QAoRR,cACE,MAvXS","sourcesContent":["/* skeletor Theme for Jekyll (Rouge)\n *\n * Based on https://ramonmcros.com/skeletor-syntax/prism.html\n *\n * @author Diego H <https://github.com/dieghernan/>\n */\n\n/*\n * Variables\n */\n\n $base-col: #dce7fd; // Base color\n $bg-col: #2b2836; // Background color\n $code-col: #655e7f; // Not highlighted code, i.e. <code>foo</code>\n\n \n // Comments\n $c-col: #655e7f; // Comment, Single ligne comments\n $cm-col: $c-col; // Comment.Multiline, Mutliline comments\n $cp-col: #ff8adb; // Comment.Preproc, Preprocessor comments such as <% %> in ERb\n $c1-col: $c-col; // Comment.Single, Comments that end at the end of the line\n $cs-col: $c-col; // Comment.Special, Special data in comments such as @license in Javadoc\n $ch-col: $c-col; // Comment.Hashbang, Shebang comments (e.g. #!/usr/bin/env ruby)\n $cpf-col: $cp-col; // Comment.PreprocFile, Preprocessor file comments (e.g. #include in C)\n \n $err-col: #ff8adb; // Error, Lexer errors\n \n // Generic\n $g-col: $base-col; // Generic, Unstyled token\n $gd-col: $g-col; // Generic.Deleted, Token value as deleted\n $ge-col: $g-col; // Generic.Emph, Token value as emphasized\n $gr-col: $err-col; // Generic.Error, Token value as an error message\n $gh-col: #bd93f9; // Generic.Heading, Token value as a headline\n $gi-col: #f3e4a2; // Generic.Inserted, Token value as inserted\n $gl-col: $g-col; // Generic.Lineno, Line numbers\n $go-col: $g-col; // Generic.Output, Marked as a program output\n $gp-col: $g-col; // Generic.Prompt, Marked as a command prompt\n $gs-col: $g-col; // Generic.Strong, Mark the token value as bold (for rst lexer)\n $gu-col: $gh-col; // Generic.Subheading, Marked as a subheadline\n $gt-col: $err-col; // Generic.Traceback, Mark the token as a part of an error traceback\n \n // Keyword\n $k-col: #f3e4a2; // Keyword, Any keyword\n $kc-col: #ff8adb; // Keyword.Constant, Keywords that are constants\n $kd-col: $k-col; // Keyword.Declaration, Keywords used for variable declaration (e.g. var in javascript)\n $kn-col: $k-col; // Keyword.Namespace, Keywords used for namespace declarations\n $kp-col: $k-col; // Keyword.Pseudo, Keywords that aren't really keywords\n $kr-col: $k-col; // Keyword.Reserved, Keywords which are reserved (such as end in Ruby)\n $kt-col: $k-col; // Keyword.Type, Keywords wich refer to a type id (such as int in C)\n \n // Literal\n $l-col: $base-col; // Literal, Any literal (if not further defined)\n $ld-col: #ff8adb; // Literal.Date, Date literals\n \n // Numbers\n $m-col: #ff8adb; // Literal.Number, Any number literal (if not further defined)\n $mb-col: $m-col; // Literal.Number.Bin, Binary literals\n $mf-col: $m-col; // Literal.Number.Float, Float numbers\n $mh-col: $m-col; // Literal.Number.Hex, Hexadecimal numbers\n $mx-col: $m-col; // Literal.Number.Hex, Hexadecimal literals\n $mi-col: $m-col; // Literal.Number.Integer, Integer literals\n $il-col: $m-col; // Literal.Number.Integer.Long, Long interger literals\n $mo-col: $m-col; // Literal.Number.Oct, Octal literals\n \n // Strings\n $s-col: #93b4ff; // Literal.String, String literals\n $sb-col: $s-col; // Literal.String.Backtick, String enclosed in backticks\n $sc-col: $s-col; // Literal.String.Char, Token type for single characters\n $dl-col: $s-col; // Literal.String.Delimiter // Delimiters in strings (e.g. \"foo\" in \"foo bar\")\n $sd-col: $s-col; // Literal.String.Doc, Documentation strings (such as in Python)\n $s2-col: $s-col; // Literal.String.Double, Double quoted strings\n $sh-col: $s-col; // Literal.String.Heredoc, For \"heredoc\" strings (e.g. in Ruby)\n $si-col: $s-col; // Literal.String.Interpol, For interpoled part in strings (e.g. in Ruby)\n $sx-col: $s-col; // Literal.String.Other, Token type for any other strings (for example %q{foo} string constructs in Ruby)\n $sr-col: #84fba2; // Literal.String.Regex, Regular expressions literals\n $se-col: $sr-col; // Literal.String.Escape, Escaped sequences in strings\n $s1-col: $s-col; // Literal.String.Single, Single quoted strings\n $ss-col: $s-col; // Literal.String.Symbol, Symbols (such as :foo in Ruby)\n $sa-col: $s-col; // Literal.String.Affix, Affix strings (such as %w{foo} in Ruby)\n \n // Names\n $n-col: $base-col; // Name, Variable/function names\n $na-col: #bd93f9; // Name.Attribute, Attributes (in HTML for instance)\n $nb-col: #f3e4a2; // Name.Builtin, Builtin names which are available in the global namespace\n $bp-col: $nb-col; // Name.Builtin.Pseudo, Builtin names that are implicit (such as self in Ruby)\n $nc-col: $n-col; // Name.Class, For class declaration\n $no-col: #dce7fd; // Name.Constant, For constants\n $nd-col: $n-col; // Name.Decorator, For decorators in languages such as Python or Java\n $ni-col: #dce7fd; // Name.Entity, Token for entitites such as &nbsp; in HTML\n $ne-col: $err-col; // Name.Exception, Exceptions and errors (e.g. ArgumentError in Ruby)\n $nf-col: #bd93f9; // Name.Function, Function names\n $nl-col: #93b4ff; // Name.Label, For label names\n $nn-col: $nf-col; // Name.Namespace, Token for namespaces\n $nx-col: #dce7fd; // Name.Other, For other names\n $py-col: $n-col; // Name.Property, Token for properties\n $nt-col: #f3e4a2; // Name.Tag, Tag mainly for markup such as XML or HTML\n $nv-col: #84fba2; // Name.Variable, Token for variables\n $vc-col: $nf-col; // Name.Variable.Class, Token for class variables (e.g. @@var in Ruby)\n $vg-col: $nf-col; // Name.Variable.Global, For global variables (such as $LOAD_PATH in Ruby)\n $vi-col: $nf-col; // Name.Variable.Instance, Token for instance variables (such as @var in Ruby)\n $fm-col: $nf-col; // Name.Function.Magic, Token for magic functions (e.g. __init__ in Python)\n $vm-col: $nf-col; // Name.Variable.Magic, Token for magic variables (e.g. $0 in Ruby)\n \n // Operators\n $o-col: #f3e4a2; // Operator, Operators (commonly +, -, /, *)\n $ow-col: $o-col; // Operator.Word, Word operators (e.g. and)\n \n // Others\n $x-col: $base-col; // Other, Token for data not matched by a parser (e.g. HTML markup in PHP code)\n $p-col: #dce7fd; // Punctuation, Punctuation which is not an operator\n $pm-col: $p-col; // Punctuation.Markup, Punctuation used in markup\n $w-col: $base-col; // Text.Whitespace, Specially highlighted whitespace\n \n /*\n   * Styles\n   */\n \n // Overall\n .highlight table td {\n   padding: 5px;\n }\n .highlight table pre {\n   margin: 0;\n }\n \n // Not highlighted color\n code {\n   color: $code-col;\n }\n \n .highlight pre {\n   background: $bg-col;\n   color: $base-col;\n }\n \n // Comments\n .highlight .c {\n   color: $c-col;\n } // Comment\n .highlight .cm {\n   color: $cm-col;\n } // Comment.Multiline\n .highlight .cp {\n   color: $cp-col;\n   font-weight: bold;\n } // Comment.Preproc\n .highlight .c1 {\n   color: $c1-col;\n } // Comment.Single\n .highlight .cs {\n   color: $cs-col;\n } // Comment.Special\n .highlight .ch {\n   color: $ch-col;\n } /* Comment.Hashbang */\n .highlight .cpf {\n   color: $cpf-col;\n } /* Comment.PreprocFile */\n \n .highlight .err {\n   color: $err-col;\n } // Error\n \n // Generic\n .highlight .g {\n   color: $g-col;\n } // Generic\n .highlight .gd {\n   color: $gd-col;\n } // Generic.Deleted\n .highlight .ge {\n   color: $ge-col;\n } // Generic.Emph\n .highlight .gr {\n   color: $gr-col;\n } // Generic.Error\n .highlight .gh {\n   color: $gh-col;\n } // Generic.Heading\n .highlight .gi {\n   color: $gi-col;\n } // Generic.Inserted\n .highlight .gl {\n   color: $gl-col;\n } // Generic.Lineno\n .highlight .go {\n   color: $go-col;\n } // Generic.Output\n .highlight .gp {\n   color: $gp-col;\n } // Generic.Prompt\n .highlight .gs {\n   color: $gs-col;\n } // Generic.Strong\n .highlight .gu {\n   color: $gu-col;\n } // Generic.Subheading\n .highlight .gt {\n   color: $gt-col;\n } // Generic.Traceback\n .highlight .ges {\n   font-weight: bold;\n   font-style: italic;\n } // Generic.EmphStrong\n \n // Keyword\n .highlight .k {\n   color: $k-col;\n } // Keyword\n .highlight .kc {\n   color: $kc-col;\n } // Keyword.Constant\n .highlight .kd {\n   color: $kd-col;\n } // Keyword.Declaration\n .highlight .kn {\n   color: $kn-col;\n } // Keyword.Namespace\n .highlight .kp {\n   color: $kp-col;\n } // Keyword.Pseudo\n .highlight .kr {\n   color: $kr-col;\n } // Keyword.Reserved\n .highlight .kt {\n   color: $kt-col;\n } // Keyword.Type\n \n // Literal\n .highlight .l {\n   color: $l-col;\n } // Literal\n .highlight .ld {\n   color: $ld-col;\n } // Literal.Date\n .highlight .m {\n   color: $m-col;\n } // Literal.Number\n .highlight .mb {\n   color: $mb-col;\n } // Literal.Number.Bin\n .highlight .mf {\n   color: $mf-col;\n } // Literal.Number.Float\n .highlight .mh {\n   color: $mh-col;\n } // Literal.Number.Hex\n .highlight .mx {\n   color: $mx-col;\n } // Literal.Number.Hex\n .highlight .mi {\n   color: $mi-col;\n } // Literal.Number.Integer\n .highlight .il {\n   color: $il-col;\n } // Literal.Number.Integer.Long\n .highlight .mo {\n   color: $mo-col;\n } // Literal.Number.Oct\n .highlight .s {\n   color: $s-col;\n } // Literal.String\n .highlight .sb {\n   color: $sb-col;\n } // Literal.String.Backtick\n .highlight .sc {\n   color: $sc-col;\n } // Literal.String.Char\n .highlight .dl {\n   color: $dl-col;\n } // Literal.String.Delimiter\n .highlight .sd {\n   color: $sd-col;\n } // Literal.String.Doc\n .highlight .s2 {\n   color: $s2-col;\n } // Literal.String.Double\n .highlight .se {\n   color: $se-col;\n } // Literal.String.Escape\n .highlight .sh {\n   color: $sh-col;\n } // Literal.String.Heredoc\n .highlight .si {\n   color: $si-col;\n } // Literal.String.Interpol\n .highlight .sx {\n   color: $sx-col;\n } // Literal.String.Other\n .highlight .sr {\n   color: $sr-col;\n } // Literal.String.Regex\n .highlight .s1 {\n   color: $s1-col;\n } // Literal.String.Single\n .highlight .ss {\n   color: $ss-col;\n } // Literal.String.Symbol\n .highlight .sa {\n   color: $sa-col;\n } // Literal.String.Affix\n \n // Names\n .highlight .n {\n   color: $n-col;\n } // Name\n .highlight .na {\n   color: $na-col;\n } // Name.Attribute\n .highlight .nb {\n   color: $nb-col;\n } // Name.Builtin\n .highlight .bp {\n   color: $bp-col;\n } // Name.Builtin.Pseudo\n .highlight .nc {\n   color: $nc-col;\n } // Name.Class\n .highlight .no {\n   color: $no-col;\n } // Name.Constant\n .highlight .nd {\n   color: $nd-col;\n } // Name.Decorator\n .highlight .ni {\n   color: $ni-col;\n } // Name.Entity\n .highlight .ne {\n   color: $ne-col;\n } // Name.Exception\n .highlight .nf {\n   color: $nf-col;\n } // Name.Function\n .highlight .nl {\n   color: $nl-col;\n } // Name.Label\n .highlight .nn {\n   color: $nn-col;\n } // Name.Namespace\n .highlight .nx {\n   color: $nx-col;\n } // Name.Other\n .highlight .py {\n   color: $py-col;\n } // Name.Property\n .highlight .nt {\n   color: $nt-col;\n } // Name.Tag\n .highlight .nv {\n   color: $nv-col;\n } // Name.Variable\n .highlight .vc {\n   color: $vc-col;\n } // Name.Variable.Class\n .highlight .vg {\n   color: $vg-col;\n } // Name.Variable.Global\n .highlight .vi {\n   color: $vi-col;\n } // Name.Variable.Instance\n .highlight .fm {\n   color: $fm-col;\n } // Name.Function.Magic\n .highlight .vm {\n   color: $vm-col;\n } // Name.Variable.Magic\n \n // Operators\n .highlight .o {\n   color: $o-col;\n } // Operator\n .highlight .ow {\n   color: $ow-col;\n } // Operator.Word\n \n // Others\n .highlight .x {\n   color: $x-col;\n } // Other\n .highlight .p {\n   color: $p-col;\n } // Punctuation\n .highlight .pm {\n   color: $pm-col;\n } // Punctuation.Markup\n .highlight .w {\n   color: $w-col;\n } // Text.Whitespace\n \n"],"file":"skeletor.css"}